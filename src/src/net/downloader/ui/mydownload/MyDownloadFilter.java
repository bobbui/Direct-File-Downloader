/*
 * Copyright (c) 2013, Bob, . All rights reserved.
 * Licensed under the GNU General Public License version 2.0 (GPLv2)
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
 */

package net.downloader.ui.mydownload;

import net.downloader.controller.DownloadController;
import net.downloader.domain.Download;
import net.downloader.ui.MainUI;
import net.downloader.utils.SwingUtils;

import javax.swing.*;
import java.awt.font.TextAttribute;

/**
 * Bob
 */
class MyDownloadFilter extends javax.swing.JPanel {

    public        javax.swing.JToggleButton jToggleButtonALL;
    public        javax.swing.JToggleButton jToggleButtonCompleted;
    public        javax.swing.JToggleButton jToggleButtonDownloading;
    // End of variables declaration//GEN-END:variables
    private final JToggleButton[]           buttons;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private       javax.swing.JButton       jButton1;

    /**
     * Creates new form SearchFilterPanel
     */
    public MyDownloadFilter() {
        initComponents();
        buttons = new JToggleButton[]{jToggleButtonALL, jToggleButtonDownloading, jToggleButtonCompleted};
        jToggleButtonALL.setSelected(true);
        for (JToggleButton jToggleButton : buttons) {
            SwingUtils.setFontAttribute(jToggleButton, TextAttribute.SIZE, 10);
            SwingUtils.setFontAttribute(jToggleButton, TextAttribute.WEIGHT, TextAttribute.WEIGHT_BOLD);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButtonALL = new javax.swing.JToggleButton();
        jToggleButtonDownloading = new javax.swing.JToggleButton();
        jToggleButtonCompleted = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();

        jToggleButtonALL.setText("All");
        jToggleButtonALL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonALLActionPerformed(evt);
            }
        });

        jToggleButtonDownloading.setText("Downloading");
        jToggleButtonDownloading.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDownloadingActionPerformed(evt);
            }
        });

        jToggleButtonCompleted.setText("Completed");
        jToggleButtonCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonCompletedActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        jButton1.setText("Clear Completed");
        jButton1.setAlignmentY(0.0F);
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jButton1.setMaximumSize(new java.awt.Dimension(137, 41));
        jButton1.setMinimumSize(new java.awt.Dimension(137, 41));
        jButton1.setPreferredSize(new java.awt.Dimension(137, 41));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jToggleButtonALL, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jToggleButtonDownloading, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jToggleButtonCompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jToggleButtonALL)
                                        .addComponent(jToggleButtonDownloading)
                                        .addComponent(jToggleButtonCompleted)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonALLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonALLActionPerformed
        deselectAll();
        ((JToggleButton) evt.getSource()).setSelected(true);
        MainUI.getInstance().myDownloadPanel.filter(-1);
    }//GEN-LAST:event_jToggleButtonALLActionPerformed

    private void jToggleButtonDownloadingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDownloadingActionPerformed
        deselectAll();
        ((JToggleButton) evt.getSource()).setSelected(true);
        MainUI.getInstance().myDownloadPanel.filter(Download.FLAG_DOWNLOADING);
    }//GEN-LAST:event_jToggleButtonDownloadingActionPerformed

    private void jToggleButtonCompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonCompletedActionPerformed
        deselectAll();
        ((JToggleButton) evt.getSource()).setSelected(true);
        MainUI.getInstance().myDownloadPanel.filter(Download.FLAG_COMPLETED);
    }//GEN-LAST:event_jToggleButtonCompletedActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DownloadController.clearCompletedDownload();
        MainUI.getInstance().myDownloadPanel.refreshCompletely();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deselectAll() {
        for (JToggleButton jToggleButton : buttons) {
            jToggleButton.setSelected(false);
        }
    }
}
