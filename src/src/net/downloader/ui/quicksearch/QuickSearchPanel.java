/*
 * Copyright (c) 2013, Bob, . All rights reserved.
 * Licensed under the GNU General Public License version 2.0 (GPLv2)
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
 */

package net.downloader.ui.quicksearch;

import net.downloader.Main;
import net.downloader.domain.Category;
import net.downloader.domain.Item;
import net.downloader.domain.Link;
import net.downloader.ui.MainUI;
import net.downloader.ui.component.ThreeStatusLabel;

import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import static net.downloader.domain.Item.CATEGORY_MAP;

public class QuickSearchPanel extends javax.swing.JPanel {

    public boolean initialized;
    public  javax.swing.JPanel jPanelCatergoriesPanel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;

    /**
     * Creates new form QuickSearchPanel
     */
    public QuickSearchPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanelCatergoriesPanel = new javax.swing.JPanel();

        jLabel1.setFont(new java.awt.Font("Tahoma", Font.BOLD, 16)); // NOI18N
        jLabel1.setText("Quickly search for item using following category :");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanelCatergoriesPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanelCatergoriesPanel.setLayout(new javax.swing.BoxLayout(jPanelCatergoriesPanel, javax.swing.BoxLayout.LINE_AXIS));
        jPanelCatergoriesPanel.setLayout(new javax.swing.BoxLayout(jPanelCatergoriesPanel, javax.swing.BoxLayout.Y_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addContainerGap(146, Short.MAX_VALUE))
                        .addComponent(jPanelCatergoriesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelCatergoriesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // End of variables declaration//GEN-END:variables

    public void init() {
        for (Category c : Main.CATEGORYS) {
            System.out.println("Category :" + c.name);
            CategoryPanel catergoryPanel = new CategoryPanel();
            catergoryPanel.categoryName.setText(c.name);
            boolean isFirst = true;
            int     i       = 0;
            for (final Link link : c.links) {
//                System.out.println("\t Link:" + link.text + " : " + link.url);
                if (i > 10) {
                    break;
                }
                i++;

                ThreeStatusLabel labelLink = new ThreeStatusLabel();

                if (isFirst) {
                    labelLink.jLabel.setText(link.text);
                    isFirst = false;
                } else {
                    labelLink.jLabel.setText(", " + link.text);
                }

                labelLink.jLabel.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent me) {
                        super.mouseClicked(me);
                        MainUI.getInstance().search(link.url);
                    }
                });

                labelLink.doLayout();
                catergoryPanel.LinkPanel2.add(labelLink);
            }
            Item.setLableIcon(CATEGORY_MAP.get(c.name.toLowerCase()), catergoryPanel.jLabelCategoryIcon);
            jPanelCatergoriesPanel.add(catergoryPanel);
        }
        initialized = true;
    }
}
