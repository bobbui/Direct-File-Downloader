/*
 * Copyright (c) 2013, Bob, . All rights reserved.
 * Licensed under the GNU General Public License version 2.0 (GPLv2)
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html
 */

package net.downloader.ui;

import net.downloader.constants.Constants;
import net.downloader.domain.Item;
import net.downloader.ui.bgtask.SearchTask;
import net.downloader.utils.SwingUtils;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Bob
 */
public class MainUI extends javax.swing.JFrame {

    private static final List<Image> icons = new ArrayList<Image>();
    private static MainUI                                                  mainUI;
    private        javax.swing.JPanel                                      jPanelMain;
    private        net.downloader.ui.LoadingPanel                 loadingPanel;
    public         net.downloader.ui.mydownload.MyDownloadPanel   myDownloadPanel;
    public         net.downloader.ui.search.SearchResultPanel     searchResultPanel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private        net.downloader.ui.component.ThreeStatusLabel   helpLabel;
    private        javax.swing.JComboBox                                   jComboBoxSelectLanguage;
    private        javax.swing.JPanel                                      jPanelMainMenu;
    private        javax.swing.JTextField                                  jTextFieldSearchKeyword;
    private        net.downloader.ui.component.ThreeStatusLabel   myDownloadLabel;
    private        net.downloader.ui.component.ThreeStatusLabel   quickSearchLabel;
    private        net.downloader.ui.quicksearch.QuickSearchPanel quickSearchPanel;
    private        net.downloader.ui.component.ThreeStatusLabel   searchButton;
    private        net.downloader.ui.component.ThreeStatusLabel   searchResultLabel;
    private        net.downloader.ui.component.ThreeStatusLabel   supportLabel;
    private MouseAdapter openSupport = new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent me) {
            super.mouseClicked(me);
            try {
                SwingUtils.openWebpage(Constants.URL_SUPPORT);
            } catch (IOException ex) {
                Logger.getLogger(MainUI.class
                        .getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(MainUI.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    };

    /**
     * Creates new form Main
     */
    private MainUI() {
        try {
            initComponents();
            initializeCustomComponent();
            hideMainPanel();
            setLocationRelativeTo(null);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static MainUI getInstance() {
        if (mainUI == null) {
            mainUI = new MainUI();
            JFrame.setDefaultLookAndFeelDecorated(true);

            icons.add(new ImageIcon("/images/alt_tab_icon.png").getImage());
            icons.add(new ImageIcon("/images/title_bar_icon.png").getImage());

            mainUI.setIconImages(icons);
            new Window(mainUI).setIconImages(icons);
        }
        return mainUI;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMainMenu = new javax.swing.JPanel();
        jTextFieldSearchKeyword = new javax.swing.JTextField();
        jComboBoxSelectLanguage = new javax.swing.JComboBox();
        searchResultLabel = new net.downloader.ui.component.ThreeStatusLabel();
        quickSearchLabel = new net.downloader.ui.component.ThreeStatusLabel();
        myDownloadLabel = new net.downloader.ui.component.ThreeStatusLabel();
        supportLabel = new net.downloader.ui.component.ThreeStatusLabel();
        helpLabel = new net.downloader.ui.component.ThreeStatusLabel();
        searchButton = new net.downloader.ui.component.ThreeStatusLabel();
        jPanelMain = new javax.swing.JPanel();
        loadingPanel = new net.downloader.ui.LoadingPanel();
        myDownloadPanel = new net.downloader.ui.mydownload.MyDownloadPanel();
        quickSearchPanel = new net.downloader.ui.quicksearch.QuickSearchPanel();
        searchResultPanel = new net.downloader.ui.search.SearchResultPanel();

        setTitle("DirectFileDownloader");
        setIconImages(icons);
        setPreferredSize(new java.awt.Dimension(950, 560));

        jPanelMainMenu.setPreferredSize(new java.awt.Dimension(800, 54));

        jTextFieldSearchKeyword.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4)));
        jTextFieldSearchKeyword.setPreferredSize(new java.awt.Dimension(4, 16));
        jTextFieldSearchKeyword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldSearchKeywordFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSearchKeywordFocusLost(evt);
            }
        });
        jTextFieldSearchKeyword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeywordKeyReleased(evt);
            }
        });

        jComboBoxSelectLanguage.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"EN"}));

        searchButton.setMinimumSize(new java.awt.Dimension(115, 33));

        javax.swing.GroupLayout jPanelMainMenuLayout = new javax.swing.GroupLayout(jPanelMainMenu);
        jPanelMainMenu.setLayout(jPanelMainMenuLayout);
        jPanelMainMenuLayout.setHorizontalGroup(
                jPanelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelMainMenuLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextFieldSearchKeyword, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1184, Short.MAX_VALUE)
                                .addComponent(searchResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(quickSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(myDownloadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(supportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(helpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jComboBoxSelectLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))
        );
        jPanelMainMenuLayout.setVerticalGroup(
                jPanelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelMainMenuLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBoxSelectLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(searchResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(quickSearchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(myDownloadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(supportLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(helpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanelMainMenuLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(jTextFieldSearchKeyword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(17, 17, 17))
        );

        jPanelMain.setBorder(new javax.swing.border.MatteBorder(null));
        jPanelMain.setMinimumSize(new java.awt.Dimension(800, 400));
        jPanelMain.setPreferredSize(new java.awt.Dimension(800, 400));
        jPanelMain.setLayout(new javax.swing.BoxLayout(jPanelMain, javax.swing.BoxLayout.LINE_AXIS));
        jPanelMain.add(loadingPanel);
        jPanelMain.add(myDownloadPanel);
        jPanelMain.add(quickSearchPanel);
        jPanelMain.add(searchResultPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanelMainMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 1773, Short.MAX_VALUE)
                        .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1773, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanelMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldSearchKeywordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeywordKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            search();
        }
    }//GEN-LAST:event_jTextFieldSearchKeywordKeyReleased

    private void jTextFieldSearchKeywordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeywordFocusGained
//        if ("Looking for somethings?".equalsIgnoreCase(jTextFieldSearchKeyword.getText())){
//            jTextFieldSearchKeyword.setText("");
//        }
    }//GEN-LAST:event_jTextFieldSearchKeywordFocusGained

    private void jTextFieldSearchKeywordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeywordFocusLost
//         if ("".equalsIgnoreCase(jTextFieldSearchKeyword.getText())){
//            jTextFieldSearchKeyword.setText("Looking for somethings?");
//        }
    }//GEN-LAST:event_jTextFieldSearchKeywordFocusLost
    // End of variables declaration//GEN-END:variables

    public void refreshResultFromANewSearch(List<Item> searchResult) {
        hideMainPanel();
        searchResultPanel.refreshCompletelyFromANewSearch(searchResult);
    }

    private void hideMainPanel() {
        SwingUtils.hideComponents(jPanelMain);
    }

    private void showLoadingPanel() {
        loadingPanel.setVisible(true);
    }

    private void search() {
        String searchKey = jTextFieldSearchKeyword.getText();
        if (searchKey == null || searchKey.length() == 0) {
            return;
        }
        hideMainPanel();
        showLoadingPanel();
        new SearchTask(searchKey, false).execute();
    }

    public void search(String URL) {
        hideMainPanel();
        showLoadingPanel();
        new SearchTask(URL, true).execute();
    }

    private void initializeCustomComponent() {

        searchButton.setIconPath("/images/search_button.png").setIconHoverPath("/images/search_button_hover.png")
                .setIconSelectedPath("/images/search_button_selected.png");
        searchButton.doLayout();
        searchButton.jLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                super.mouseClicked(me);
                search();
            }
        });
        searchButton.jLabel.setText("");
        searchButton.doLayout();

        searchResultLabel.setIconPath("/images/search_result.png").setIconHoverPath("/images/search_result_hover.png");
        searchResultLabel.jLabel.setText("Search Result");
        searchResultLabel.doLayout();
        searchResultLabel.jLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                super.mouseClicked(me);
                hideMainPanel();
                searchResultPanel.showUp();
            }
        });

        quickSearchLabel.setIconPath("/images/quick_search.png").setIconHoverPath("/images/quick_search_hover.png");
        quickSearchLabel.jLabel.setText("Quick Search");
        quickSearchLabel.doLayout();
        quickSearchLabel.jLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                super.mouseClicked(me);
                hideMainPanel();
                showQuickSearch();
            }
        });

        myDownloadLabel.setIconPath("/images/my_download.png").setIconHoverPath("/images/my_download_hover.png");
        myDownloadLabel.jLabel.setText("Downloads");
        myDownloadLabel.doLayout();
        myDownloadLabel.jLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent me) {
                super.mouseClicked(me);
                hideMainPanel();
                myDownloadPanel.refreshCompletely();
            }
        });

        supportLabel.setIconPath("/images/support.png").setIconHoverPath("/images/support_hover.png");
        supportLabel.jLabel.setText("");
        supportLabel.jLabel.setToolTipText("Online Support");
        supportLabel.doLayout();
        supportLabel.jLabel.addMouseListener(openSupport);

        helpLabel.setIconPath("/images/help.png").setIconHoverPath("/images/help_hover.png").setIconSelectedPath("/images/help_hover.png");
        helpLabel.jLabel.setText("");
        helpLabel.jLabel.setToolTipText("Online Help");
        helpLabel.doLayout();

        helpLabel.jLabel.addMouseListener(openSupport);
    }

    private void showQuickSearch() {
        if (!quickSearchPanel.initialized) {
            quickSearchPanel.init();
        }

        quickSearchPanel.setVisible(true);
    }
}